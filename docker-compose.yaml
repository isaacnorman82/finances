services:
  db:
    image: postgres:16.4-alpine3.20
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - '5432:5432'
    volumes:
      - db:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4:latest
    restart: always
    ports:
      - '8888:80'
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}

    volumes:
      - pgadmin-data:/var/lib/pgadmin
      - ./pgadmin_servers.json:/pgadmin4/servers.json
    depends_on:
      db:
        condition: service_healthy

  backend:
    restart: always
    build:
      context: .
      dockerfile: dockerfile.backend
    ports:
      - '8000:8000'
    environment:
      LOAD_SAMPLE_DATA: ${LOAD_SAMPLE_DATA:-false}
      DATABASE_URL: "postgresql://postgres:postgres@db/postgres"
      ALLOWED_ORIGINS: ${ALLOWED_ORIGINS}
    depends_on:
      db:
        condition: service_healthy

  frontend:
    restart: always
    build:
      context: .
      dockerfile: dockerfile.frontend
    ports:
      - '3000:3000'
    depends_on:
      - backend

volumes:
  db:
    driver: local
  pgadmin-data:
